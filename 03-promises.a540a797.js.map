{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,IAAIC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACvC,MAAME,EAAcH,SAASC,cAAc,mBACrCG,EAAcJ,SAASC,cAAc,SACvBD,SAASK,iBAAiB,SAC9C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACWC,KAAKC,SAAW,GAElCJ,EAAQ,CAACK,SAAAR,E,MAAUC,IAEnBG,EAAO,CAACI,SAAAR,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAGb,IAAIQ,EAqBJZ,EAAYa,iBAAiB,UApB7B,SAAyBC,GACvBA,EAAMC,iBACN,IAAIC,EAAQjB,EAAYiB,MACpBC,EAAQC,SAASvB,EAAWqB,OAC5BG,EAAOD,SAASpB,EAAUkB,OAC9B,GAAGA,EAAQ,GAAKC,EAAQ,GAAKE,EAAO,EAClC,OAAOC,MAAM,sCAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOK,IAC1BT,EAAWS,EACXnB,EAAcU,EAAUK,GACtBK,MAAK,EAAGX,SAAAY,EAAQnB,MAAEA,MACjBoB,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAqBH,QAAenB,MAAU,IAEvEuB,OAAM,EAAGhB,SAAAiB,EAAQxB,MAAEA,MAClBoB,EAAA/B,GAASgC,OAAOI,QAAQ,oBAAoBD,QAAexB,MAAU,IAExEa,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nlet delayInput = document.querySelector('[name=\"delay\"]');\nlet stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst formPromise = document.querySelector(\".form\");\nconst inputNumber = document.querySelectorAll(\"input\");\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n      if(shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\nlet position;\nfunction callTheFunction(event) {\n  event.preventDefault();\n  let value = amountInput.value;\n  let delay = parseInt(delayInput.value);\n  let step = parseInt(stepInput.value);\n  if(value < 0 || delay < 0 || step < 0) {\n    return alert(\"Wypełnij pola wartością nieujemną!\");\n  } \n  for (let i = 1; i <= value; i++) {\n    position = i;\n    createPromise(position, delay)\n     .then(({ position, delay }) => {\n       Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n     })\n     .catch(({ position, delay }) => {\n       Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n     });\n    delay += step;\n  }\n} \nformPromise.addEventListener(\"submit\", callTheFunction);"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$formPromise","querySelectorAll","$47d4ff9957288465$var$createPromise","position1","delay","Promise","resolve","reject","setTimeout","Math","random","position","$47d4ff9957288465$var$position","addEventListener","event","preventDefault","value","delay1","parseInt","step","alert","i","then","position2","$parcel$interopDefault","Notify","success","catch","position3","failure"],"version":3,"file":"03-promises.a540a797.js.map"}